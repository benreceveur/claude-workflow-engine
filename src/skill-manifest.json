{
  "tech-debt-tracker": {
    "description": "Analyze and prioritize technical debt across the repository.",
    "keywords": {
      "primary": [
        "technical debt",
        "tech debt",
        "code debt"
      ],
      "secondary": [
        "refactor",
        "cleanup",
        "improve",
        "legacy",
        "debt",
        "sqale"
      ],
      "context": [
        "codebase",
        "repository",
        "project",
        "code quality"
      ]
    },
    "phrases": [
      "analyze debt",
      "identify debt",
      "code quality issues",
      "technical issues"
    ],
    "operations": [
      "scan",
      "prioritize"
    ],
    "defaultContext": {
      "operation": "scan",
      "project_dir": "."
    },
    "confidence": 0.85
  },
  "finops-optimizer": {
    "description": "Inspect cloud usage patterns and surface cost saving opportunities.",
    "keywords": [
      "cloud cost",
      "finops",
      "aws cost",
      "gcp cost",
      "azure cost",
      "spend optimization"
    ],
    "operations": [
      "analyze"
    ],
    "defaultContext": {
      "operation": "analyze",
      "provider": "aws"
    }
  },
  "memory-hygiene": {
    "description": "Validate and clean workflow engine memory artifacts.",
    "keywords": [
      "memory cleanup",
      "validate memory",
      "clean memory",
      "deduplicate memory"
    ],
    "operations": [
      "scan",
      "compact"
    ],
    "defaultContext": {
      "operation": "scan"
    }
  },
  "semantic-search": {
    "description": "Perform natural language code search over the repository.",
    "keywords": [
      "semantic search",
      "code search",
      "natural language search",
      "find function"
    ],
    "operations": [
      "search"
    ],
    "defaultContext": {
      "operation": "search",
      "query": ""
    }
  },
  "documentation-sync": {
    "description": "Detect documentation drift between source and docs.",
    "keywords": [
      "documentation drift",
      "sync docs",
      "update docs",
      "doc alignment"
    ],
    "operations": [
      "scan"
    ],
    "defaultContext": {
      "operation": "scan"
    }
  },
  "test-first-change": {
    "description": "Identify and run relevant tests for a change set.",
    "keywords": {
      "primary": [
        "test first",
        "test-first",
        "run tests",
        "find tests"
      ],
      "secondary": [
        "test",
        "testing",
        "before change",
        "regression",
        "test plan"
      ],
      "context": [
        "change",
        "modify",
        "update",
        "edit"
      ]
    },
    "phrases": [
      "run tests before",
      "test before change",
      "find related tests"
    ],
    "operations": [
      "plan",
      "execute"
    ],
    "defaultContext": {
      "operation": "plan"
    },
    "confidence": 0.80
  },
  "code-formatter": {
    "description": "Format source files consistently across languages.",
    "keywords": {
      "primary": [
        "format",
        "formatting",
        "prettier",
        "eslint",
        "style guide"
      ],
      "secondary": [
        "lint",
        "beautify",
        "style",
        "indent",
        "whitespace",
        "reformat",
        "black",
        "clang-format"
      ],
      "context": [
        "code",
        "javascript",
        "typescript",
        "files",
        "all"
      ]
    },
    "phrases": [
      "format code",
      "apply style",
      "fix formatting",
      "code style"
    ],
    "operations": [
      "format"
    ],
    "defaultContext": {
      "operation": "format",
      "paths": [
        "."
      ]
    },
    "confidence": 0.90
  },
  "release-orchestrator": {
    "description": "Generate release notes and versioning suggestions.",
    "keywords": {
      "primary": [
        "release",
        "version",
        "changelog",
        "semantic versioning"
      ],
      "secondary": [
        "publish",
        "tag",
        "deploy",
        "semver",
        "release plan",
        "version bump"
      ],
      "context": [
        "create",
        "generate",
        "prepare",
        "new"
      ]
    },
    "phrases": [
      "create release",
      "new version",
      "generate changelog",
      "semantic version"
    ],
    "operations": [
      "plan",
      "draft"
    ],
    "defaultContext": {
      "operation": "plan"
    },
    "confidence": 0.85
  },
  "ai-code-generator": {
    "description": "Generate code using AI with context-aware templates.",
    "keywords": [
      "generate code",
      "ai code",
      "code generation",
      "scaffold",
      "boilerplate"
    ],
    "operations": [
      "generate",
      "scaffold"
    ],
    "defaultContext": {
      "operation": "generate"
    }
  },
  "api-documentor": {
    "description": "Automatically document APIs with OpenAPI/Swagger specs.",
    "keywords": {
      "primary": [
        "openapi",
        "swagger",
        "api documentation",
        "api docs"
      ],
      "secondary": [
        "documentation",
        "document",
        "generate",
        "api",
        "rest",
        "graphql"
      ],
      "context": [
        "endpoint",
        "routes",
        "server",
        "backend"
      ]
    },
    "phrases": [
      "generate documentation",
      "api docs",
      "openapi spec",
      "swagger file",
      "generate openapi",
      "rest api endpoints",
      "api endpoint documentation"
    ],
    "operations": [
      "generate",
      "update"
    ],
    "defaultContext": {
      "operation": "generate"
    },
    "confidence": 0.85
  },
  "codebase-navigator": {
    "description": "Navigate and analyze codebase structure and dependencies.",
    "keywords": [
      "explore code",
      "codebase structure",
      "dependency graph",
      "code navigation"
    ],
    "operations": [
      "analyze",
      "navigate"
    ],
    "defaultContext": {
      "operation": "analyze"
    }
  },
  "container-validator": {
    "description": "Validate Docker containers and Kubernetes configurations.",
    "keywords": {
      "primary": [
        "dockerfile",
        "kubernetes",
        "container",
        "k8s",
        "docker"
      ],
      "secondary": [
        "validate",
        "lint",
        "check",
        "best practices"
      ],
      "context": [
        "manifest",
        "yaml",
        "config",
        "deployment"
      ]
    },
    "phrases": [
      "validate dockerfile",
      "kubernetes manifest",
      "container security",
      "docker best practices"
    ],
    "operations": [
      "validate",
      "lint"
    ],
    "defaultContext": {
      "operation": "validate"
    },
    "confidence": 0.85
  },
  "database-migrator": {
    "description": "Generate and manage database migrations safely.",
    "keywords": {
      "primary": [
        "migration",
        "migrate",
        "database migration",
        "db migration"
      ],
      "secondary": [
        "schema",
        "database",
        "table",
        "column",
        "alter"
      ],
      "context": [
        "create",
        "add",
        "modify",
        "drop"
      ]
    },
    "phrases": [
      "create migration",
      "database schema",
      "add table",
      "modify table"
    ],
    "operations": [
      "generate",
      "validate",
      "execute"
    ],
    "defaultContext": {
      "operation": "generate"
    },
    "confidence": 0.85
  },
  "dependency-guardian": {
    "description": "Monitor and manage project dependencies and security vulnerabilities.",
    "keywords": {
      "primary": [
        "dependencies",
        "dependency",
        "outdated",
        "npm audit",
        "package"
      ],
      "secondary": [
        "update",
        "upgrade",
        "check",
        "security",
        "vulnerabilities"
      ],
      "context": [
        "packages",
        "libraries",
        "modules",
        "node_modules"
      ]
    },
    "phrases": [
      "check dependencies",
      "outdated packages",
      "security vulnerabilities",
      "update dependencies"
    ],
    "operations": [
      "audit",
      "update"
    ],
    "defaultContext": {
      "operation": "audit"
    },
    "confidence": 0.85
  },
  "incident-triage": {
    "description": "Faster on-call handoffs and better postmortems with triage SOPs.",
    "keywords": [
      "incident",
      "triage",
      "on-call",
      "postmortem",
      "incident response"
    ],
    "operations": [
      "triage",
      "analyze",
      "postmortem"
    ],
    "defaultContext": {
      "operation": "triage"
    }
  },
  "performance-profiler": {
    "description": "Profile application performance and identify bottlenecks.",
    "keywords": {
      "primary": [
        "performance",
        "profiling",
        "profile",
        "bottleneck",
        "slow"
      ],
      "secondary": [
        "optimize",
        "speed",
        "analyze",
        "cpu",
        "memory"
      ],
      "context": [
        "application",
        "code",
        "function",
        "endpoint"
      ]
    },
    "phrases": [
      "profile performance",
      "identify bottlenecks",
      "performance issues",
      "slow performance",
      "profile application",
      "performance bottleneck",
      "identify performance bottlenecks"
    ],
    "operations": [
      "profile",
      "analyze"
    ],
    "defaultContext": {
      "operation": "profile"
    },
    "confidence": 0.85
  },
  "pr-author-reviewer": {
    "description": "Raise PR quality with templates, checklists, and security reviews.",
    "keywords": [
      "pull request",
      "pr review",
      "code review",
      "pr template"
    ],
    "operations": [
      "review",
      "template"
    ],
    "defaultContext": {
      "operation": "review"
    }
  },
  "security-scanner": {
    "description": "Scan codebase for security vulnerabilities and compliance issues.",
    "keywords": {
      "primary": [
        "security",
        "vulnerability",
        "vulnerabilities",
        "owasp",
        "security scan"
      ],
      "secondary": [
        "audit",
        "scan",
        "check",
        "issues",
        "exploit",
        "sast"
      ],
      "context": [
        "codebase",
        "dependencies",
        "packages",
        "code"
      ]
    },
    "phrases": [
      "security scan",
      "security audit",
      "vulnerability scan",
      "security issues",
      "security check"
    ],
    "operations": [
      "scan",
      "report"
    ],
    "defaultContext": {
      "operation": "scan"
    },
    "confidence": 0.90
  },
  "git-commit-helper": {
    "description": "Generate conventional commit messages from code changes.",
    "keywords": [
      "git commit",
      "commit message",
      "conventional commits"
    ],
    "operations": [
      "generate"
    ],
    "defaultContext": {
      "operation": "generate"
    }
  },
  "skill-creator": {
    "description": "Create new workflow engine skills with templates and scaffolding.",
    "keywords": [
      "create skill",
      "new skill",
      "skill template"
    ],
    "operations": [
      "create",
      "scaffold"
    ],
    "defaultContext": {
      "operation": "create"
    }
  },
  "mcp-builder": {
    "description": "Build and deploy Model Context Protocol (MCP) servers.",
    "keywords": [
      "mcp server",
      "build mcp",
      "mcp deployment"
    ],
    "operations": [
      "build",
      "deploy"
    ],
    "defaultContext": {
      "operation": "build"
    }
  },
  "artifacts-builder": {
    "description": "Build and package deployment artifacts.",
    "keywords": [
      "build artifacts",
      "package",
      "deployment package"
    ],
    "operations": [
      "build",
      "package"
    ],
    "defaultContext": {
      "operation": "build"
    }
  },
  "canvas-design": {
    "description": "Design UI mockups and wireframes with canvas tools.",
    "keywords": [
      "ui design",
      "wireframe",
      "mockup",
      "canvas"
    ],
    "operations": [
      "design",
      "export"
    ],
    "defaultContext": {
      "operation": "design"
    }
  },
  "webapp-testing": {
    "description": "Automated web application testing with Playwright/Selenium.",
    "keywords": [
      "web testing",
      "e2e testing",
      "playwright",
      "selenium"
    ],
    "operations": [
      "test",
      "record"
    ],
    "defaultContext": {
      "operation": "test"
    }
  },
  "pdf-anthropic": {
    "description": "Process and extract data from PDF documents using Claude.",
    "keywords": [
      "pdf processing",
      "extract pdf",
      "parse pdf"
    ],
    "operations": [
      "extract",
      "analyze"
    ],
    "defaultContext": {
      "operation": "extract"
    }
  },
  "pdf-processing-pro": {
    "description": "Advanced PDF processing with OCR and document analysis.",
    "keywords": [
      "pdf ocr",
      "pdf extraction",
      "document processing"
    ],
    "operations": [
      "extract",
      "ocr",
      "analyze"
    ],
    "defaultContext": {
      "operation": "extract"
    }
  },
  "docx": {
    "description": "Process and generate Microsoft Word documents.",
    "keywords": [
      "word document",
      "docx",
      "document generation"
    ],
    "operations": [
      "read",
      "generate",
      "convert"
    ],
    "defaultContext": {
      "operation": "read"
    }
  },
  "xlsx": {
    "description": "Process Excel files with data analysis and transformation.",
    "keywords": [
      "excel",
      "xlsx",
      "spreadsheet"
    ],
    "operations": [
      "read",
      "analyze",
      "transform"
    ],
    "defaultContext": {
      "operation": "read"
    }
  },
  "excel-analysis": {
    "description": "Advanced Excel data analysis and visualization.",
    "keywords": [
      "excel analysis",
      "spreadsheet analysis",
      "data visualization"
    ],
    "operations": [
      "analyze",
      "visualize"
    ],
    "defaultContext": {
      "operation": "analyze"
    }
  },
  "pptx": {
    "description": "Process and generate PowerPoint presentations.",
    "keywords": [
      "powerpoint",
      "pptx",
      "presentation"
    ],
    "operations": [
      "read",
      "generate",
      "convert"
    ],
    "defaultContext": {
      "operation": "read"
    }
  }
}
